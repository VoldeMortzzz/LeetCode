/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode[] splitListToParts(ListNode root, int k) {
        ListNode[] result = new ListNode[k];
        if(k<=0) return result;
        ListNode p = root;
        int count = 0;
        while(p != null){
            count++;
            p = p.next;
        }
        int size = count/k;
        int remain = count%k;
        p = root;
        for(int i = 0;i<k;i++){
            int rsize = remain>0?size+1:size;
            remain--;
            result[i] = root;
            for(int j = 0;j<rsize-1;j++){
                p = p.next;
            }
            if(p != null){
                root = p.next;
                p.next = null;
                p = root;
            }
        }
        return result;
    }
}
