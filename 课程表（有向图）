#有向图，利用邻接矩阵判断是否成环

#广度优先
class Solution {
    public boolean canFinish(int numCourses, int[][] prerequisites) {
        if(numCourses <= 0) return true;
        int[][] matrix = new int[numCourses][numCourses];
        int[] indegree = new int[numCourses];
        int count = numCourses;
        for(int i = 0;i<prerequisites.length;i++){
            int[] arr = prerequisites[i];
            matrix[arr[1]][arr[0]] = 1;
            indegree[arr[0]] += 1;
        }
        LinkedList<Integer> queue = new LinkedList<>();
        for(int i = 0;i<numCourses;i++){
            if(indegree[i] == 0){
                queue.offer(i);
                count--;
            } 
        }
        while(!queue.isEmpty()){
            int cur = queue.poll();
            for(int i = 0;i<numCourses;i++){
                if(matrix[cur][i] == 1){
                    indegree[i] -= 1;
                    if(indegree[i] == 0){
                        queue.offer(i);
                        count--;
                    } 
                }  
            }
        }
        if(count == 0)
            return true;
        else
            return false;
    }
}
