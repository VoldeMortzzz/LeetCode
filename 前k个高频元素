
class Solution {
    public List<Integer> topKFrequent(int[] nums, int k) {
        List<Integer> result = new ArrayList<>();
        HashMap<Integer,Integer> hm = new HashMap<>();
        for(int i:nums){
            hm.put(i,hm.getOrDefault(i,0)+1);
        }
        PriorityQueue<Integer> stack = new PriorityQueue<>(new Comparator<Integer>(){
            public int compare(Integer o1,Integer o2){
                return hm.get(o2)-hm.get(o1);
            }
        });
        for(int i : hm.keySet()){
            stack.offer(i);
        }
        for(int i = 0;i<k;i++)
            result.add(stack.poll());
        return result;

    }
}
